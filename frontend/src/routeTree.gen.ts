/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UpdatesRouteImport } from './routes/updates'
import { Route as ChangelogRouteImport } from './routes/changelog'
import { Route as IndexRouteImport } from './routes/index'

const UpdatesRoute = UpdatesRouteImport.update({
  id: '/updates',
  path: '/updates',
  getParentRoute: () => rootRouteImport,
} as any)
const ChangelogRoute = ChangelogRouteImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/updates': typeof UpdatesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/updates': typeof UpdatesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/updates': typeof UpdatesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/changelog' | '/updates'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/changelog' | '/updates'
  id: '__root__' | '/' | '/changelog' | '/updates'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChangelogRoute: typeof ChangelogRoute
  UpdatesRoute: typeof UpdatesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/updates': {
      id: '/updates'
      path: '/updates'
      fullPath: '/updates'
      preLoaderRoute: typeof UpdatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/changelog': {
      id: '/changelog'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof ChangelogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChangelogRoute: ChangelogRoute,
  UpdatesRoute: UpdatesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
